:
# Examine git commits to find the most recently committed image metadata file
valid=n
git rev-list HEAD \
| while read release ; do
    filename=`git diff-tree --no-commit-id --name-only -r "${release}"`
    imagename=`expr "${filename}" : '\([0-9][0-9]*.[0-9][0-9]*.[0-9][0-9]*-[0-9][0-9]*T[0-9][0-9]*Z[-.a-zA-Z0-9]*\)'`
    if [ ":${imagename}" != ":" ] ; then
        # validate file
        . ${imagename} || exit 1
        for var in REPO_OWNER REPO_NAME VERSION ; do
            eval "val=\$${var}"
            if [ ":${val}" = ":" ] ; then
                echo "${PROG}: ${imagename}: variable ${var} not set" >&2
                valid=y
                break
            fi
        done
        parse-semver "${VERSION}"
        if [ $? != 0 ] ; then
            valid=n
        fi
        if [ ${valid} = y ] ; then
            IMAGE_TAG="${imagename}"
            COMMINFO=`git log -1 --pretty=format:"by %ce at %cd" "${release}"`
            export IMAGE_TAG COMMITINFO
            circle-env --add COMMITINFO
            cp "${imagename}" "${IMAGE_METADATA}" || exit 1
            break
        fi
    fi
done
if [ ${valid} = n ] ; then
    echo "${PROG}: no valid image metadata file found" >&2
    exit 1
fi

